 <!DOCTYPE html>
<html lang="en">
<head>
    <title>To-Do List</title>
    <style>
        body {
    font-family: Arial, sans-serif;
    background-image: url('https://img.freepik.com/premium-vector/one-continuous-line-drawing-couch-lamp-plant-modern-flat-furniture-living-room-interior-simple-linear-style-editable-stroke-vector-illustration_306763-187.jpg?w=2000');
    background-size: cover;
    background-position: fixed;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

h1 {
    color: white;
    text-align: center;
}

h2 {
    font-size: 80%;
}

.container {
    text-align: center;
    color: white;
    background-color: rgba(10, 117, 153, 0.7); /* I chose to include .7 opacity so that you could see the line drawing in the background through the list.*/
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    max-height: 80%; /* Set a maximum height */
    overflow-y: auto;
    position: fixed; 
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-width: 50%;
    
}

ul {
    list-style-type: none;
    padding: 0;
}

li {
    display: flex;
    justify-content: space-between;
    align-items: left;
    padding: 8px;
    border-bottom: 1px solid #ddd;
    color: rbg(255, 255, 255); 
    transition: color 0.3s ease;
    transition: transform 0.3s ease;
}

li:hover {
    color: rgb(0, 0, 0);
    cursor: pointer;
    transform: scale(1.025);
    transition: color 0.3s ease;
}

li.completed {
    text-decoration: line-through;
    color: rgb(64, 64, 64);
    transform: scale(1);
}

.remove-button {
    align: right;
    border: none;
    display: none; /* Initially hide the remove buttons so that you have to toggle the edit list to be visible*/
}

#editButton {
    /*add styles for editbutton*/
    background: none;
    color: white;
    padding: 6px 12px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-bottom: 10px;
    transition: background-color 0.3s ease; 
}

#editButton:hover {
    background-color: rgba(255, 255, 255, 0.5);
    transition: background 0.3s;
    }

#editButton:active {
    background: none;
    color: #888;
}

.edit-mode .remove-button {
    display: inline-block;
}

        </style>
</head>
<body>

<div class="container">
        <h1>To-Do List</h1>
        <input type="text" id="taskInput" placeholder="New task...">
        <button onclick="addTask()">Add</button>
        <button id="editButton" onclick="toggleEdit()">&#9998;</button> <!-- &#9998 is the HTML entity for the pencil icon-->
        <ul id="taskList"></ul>
        <!--List of suggested tasks. May add function to add these to the list. May remove or move to a different page.
        <h2>Suggested Tasks</h2> 
        <ul>
            <li>Fill dishwasher</li>
            <li>Empty dishwasher</li>
            <li>Vacuum</li>
        </ul>
    -->
    </div>

    <script>
function addTask() {
    const taskInput = document.getElementById("taskInput");
    const taskList = document.getElementById("taskList");

    if (taskInput.value.trim() === "") {
        alert("Add a chore to the list");
        return;
    }

    const newTask = document.createElement("li");
    newTask.innerHTML = `
        <span onclick="completeTask(this)">${taskInput.value}</span>
        <button class="remove-button" onclick="removeTask(this)">&times;</button>
    `;
    taskList.appendChild(newTask);
    taskInput.value = "";
}

function completeTask(button) {
    const task = button.parentNode;
    task.classList.toggle("completed");
}

function removeTask(button) {
        const task = button.parentNode;
        task.parentNode.removeChild(task);
}

function toggleEdit() {
    const taskList = document.getElementById("taskList");
    taskList.classList.toggle("edit-mode");
        }


    </script>
</body>
</html>
